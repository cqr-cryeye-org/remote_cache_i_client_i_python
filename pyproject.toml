[project]
name = "remote-cache-client"
version = "0.0.4"

description = "A client for remote caching."

readme = "README.md"
authors = [
    { name = "alirex", email = "alirex.prime@gmail.com" }
]

requires-python = ">=3.13.7"

dependencies = [
    # Web requests. Async.
    "aiohttp[speedups]>=3.12.15",
    # Classes and validation.
    "pydantic>=2.11.7",
]


[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]


[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

[tool.uv]
required-version = ">=0.8.14"

[tool.ruff]

line-length = 120

extend-exclude = [
]

[tool.ruff.lint]
extend-select = [
    "ALL",
]
extend-ignore = [
    # Missing docstring.
    "D1",
    # flake8-future-annotations.
    "FA",
    # Missing type annotation for self and cls.
    "ANN1",
    # f-strings to format logging messages.
    "G004",
    # Consider {expression} instead of string join.
    "FLY002",
    # TODO: Remove after this will be implemented in MyPy.
    # Type alias {name} uses TypeAlias annotation instead of the type keyword
    "UP040",
    # TODOs
    # Author.
    "TD002",
    # Link to issue
    "TD003",
    # Line contains a TODO or related comment
    "FIX",
    # Args and kwargs are not used and not annotated
    "ANN002",
    "ANN003",
    # Commented code
    "ERA001",
    # empty-comment
    "PLR2044",
    #
    #
    # TODO: Remove ignore from "T201" after big refactoring.
    # print used.
    "T201",
    #
    "PLR0913", # Too many arguments.
    "C901", # The function is too complex.
    #
    # Temporarily disable:
    "PLR0912", # Too many branches.
    "PLR0915", # Too many statements.
    "PLR0911", # Too many return statements.
    #
    "BLE001", # Blind except. Remove after fixing all issues.

]

task-tags = [
    "TODO",
    "FIXME",
    "HACK",
    "XXX",
    "[",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
# https://betterprogramming.pub/3-different-docstring-formats-for-python-d27be81e0d68

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true


[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    # Unused import.
    "F401",
]
